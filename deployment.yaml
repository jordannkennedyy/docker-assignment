apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service-container
        image: jordankennedy/acit3495:auth-service
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: 200m
          limits:
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service-lb 
spec:
  type: LoadBalancer
  selector:
    app: auth-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: receiver-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: receiver-service
  template:
    metadata:
      labels:
        app: receiver-service
    spec:
      containers:
      - name: receiver-service-container
        image: jordankennedy/acit3495:receiver-service
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
        resources:
          requests:
            cpu: 200m
          limits:
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: receiver-service-lb
spec:
  type: LoadBalancer
  selector:
    app: receiver-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: show-video-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: show-video-service
  template:
    metadata:
      labels:
        app: show-video-service
    spec:
      containers:
      - name: show-video-service-container
        image: jordankennedy/acit3495:show-video-service
        imagePullPolicy: Always
        ports:
        - containerPort: 2000
        resources:
          requests:
            cpu: 200m
          limits:
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: show-video-service-lb
spec:
  type: LoadBalancer
  selector:
    app: show-video-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 2000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upload-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: upload-service
  template:
    metadata:
      labels:
        app: upload-service
    spec:
      containers:
      - name: upload-service-container
        image: jordankennedy/acit3495:upload-service
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 200m
          limits:
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: upload-service-lb
spec:
  type: LoadBalancer
  selector:
    app: upload-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
      - name: database-container
        image: jordankennedy/acit3495:database
        imagePullPolicy: Always
        ports:
        - containerPort: 3306
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: rootpassword
          - name: MYSQL_DATABASE
            value: filedb
          - name: MYSQL_USER
            value: user
          - name: MYSQL_PASSWORD
            value: password
        volumeMounts:
          - name: db-data
            mountPath: /var/lib/mysql
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: database-lb 
spec:
  type: NodePort
  selector:
    app: database
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
    nodePort: 31000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard-rwo
